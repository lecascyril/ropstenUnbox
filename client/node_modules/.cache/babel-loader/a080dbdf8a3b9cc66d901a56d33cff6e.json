{"ast":null,"code":"var _jsxFileName = \"/root/dev/Ropsten/unbox/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      storageValue: 0,\n      web3: null,\n      accounts: null,\n      contract: null,\n      addresses: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = SimpleStorageContract.networks[networkId];\n        const instance = new web3.eth.Contract(SimpleStorageContract.abi, deployedNetwork && deployedNetwork.address);\n        const response = await instance.methods.get().call(); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          storageValue: response,\n          web3,\n          accounts,\n          contract: instance\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Web3, accounts, and contract...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Good to Go!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your Truffle Box is installed and ready.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Smart Contract Example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"The stored value is: \", this.state.storageValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","SimpleStorageContract","getWeb3","App","state","storageValue","web3","accounts","contract","addresses","componentDidMount","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","response","methods","get","call","setState","error","alert","console","render"],"sources":["/root/dev/Ropsten/unbox/client/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { storageValue: 0, web3: null, accounts: null, contract: null, addresses: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorageContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SimpleStorageContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n      const response = await instance.methods.get().call();\n\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ storageValue: response, web3, accounts, contract: instance});\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div className=\"App\">\n        <h1>Good to Go!</h1>\n        <p>Your Truffle Box is installed and ready.</p>\n        <h2>Smart Contract Example</h2>\n        <div>The stored value is: {this.state.storageValue}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,qBAAP,MAAkC,gCAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;EAAA;IAAA;IAAA,KAC1BI,KAD0B,GAClB;MAAEC,YAAY,EAAE,CAAhB;MAAmBC,IAAI,EAAE,IAAzB;MAA+BC,QAAQ,EAAE,IAAzC;MAA+CC,QAAQ,EAAE,IAAzD;MAA+DC,SAAS,EAAE;IAA1E,CADkB;;IAAA,KAG1BC,iBAH0B,GAGN,YAAY;MAC9B,IAAI;QACF;QACA,MAAMJ,IAAI,GAAG,MAAMJ,OAAO,EAA1B,CAFE,CAIF;;QACA,MAAMK,QAAQ,GAAG,MAAMD,IAAI,CAACK,GAAL,CAASC,WAAT,EAAvB,CALE,CAOF;;QACA,MAAMC,SAAS,GAAG,MAAMP,IAAI,CAACK,GAAL,CAASG,GAAT,CAAaC,KAAb,EAAxB;QACA,MAAMC,eAAe,GAAGf,qBAAqB,CAACgB,QAAtB,CAA+BJ,SAA/B,CAAxB;QACA,MAAMK,QAAQ,GAAG,IAAIZ,IAAI,CAACK,GAAL,CAASQ,QAAb,CACflB,qBAAqB,CAACmB,GADP,EAEfJ,eAAe,IAAIA,eAAe,CAACK,OAFpB,CAAjB;QAIA,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CAAiBC,GAAjB,GAAuBC,IAAvB,EAAvB,CAdE,CAiBF;QACA;;QACA,KAAKC,QAAL,CAAc;UAAErB,YAAY,EAAEiB,QAAhB;UAA0BhB,IAA1B;UAAgCC,QAAhC;UAA0CC,QAAQ,EAAEU;QAApD,CAAd;MACD,CApBD,CAoBE,OAAOS,KAAP,EAAc;QACd;QACAC,KAAK,CACF,wEADE,CAAL;QAGAC,OAAO,CAACF,KAAR,CAAcA,KAAd;MACD;IACF,CA/ByB;EAAA;;EAkC1BG,MAAM,GAAG;IACP,IAAI,CAAC,KAAK1B,KAAL,CAAWE,IAAhB,EAAsB;MACpB,oBAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACD;;IACD,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA,oCAA2B,KAAKF,KAAL,CAAWC,YAAtC;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAQD;;AA9CyB;;AAiD5B,eAAeF,GAAf"},"metadata":{},"sourceType":"module"}