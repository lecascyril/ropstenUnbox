{"ast":null,"code":"import Web3 from \"web3\";\n\nconst getWeb3 = () => new Promise((resolve, reject) => {\n  // Wait for loading completion to avoid race conditions with web3 injection timing.\n  window.addEventListener(\"load\", async () => {\n    // Modern dapp browsers...\n    if (window.ethereum) {\n      const web3 = new Web3(window.ethereum);\n\n      try {\n        // Request account access if needed\n        await window.ethereum.enable(); // Accounts now exposed\n\n        resolve(web3);\n        window.ethereum.on('disconnect', function () {\n          alert(\"il faut se connecter\");\n        });\n        window.ethereum.on('accountsChanged', function () {\n          window.location.reload();\n        });\n        window.ethereum.on('chainChanged', function () {\n          window.location.reload();\n        });\n      } catch (error) {\n        reject(error);\n      }\n    } // Legacy dapp browsers...\n    else if (window.web3) {\n      // Use Mist/MetaMask's provider.\n      const web3 = window.web3;\n      console.log(\"Injected web3 detected.\");\n      resolve(web3);\n    } // Fallback to localhost; use dev console port by default...\n    else {\n      const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\n      const web3 = new Web3(provider);\n      console.log(\"No web3 instance injected, using Local web3.\");\n      resolve(web3);\n    }\n  });\n});\n\nexport default getWeb3;","map":{"version":3,"names":["Web3","getWeb3","Promise","resolve","reject","window","addEventListener","ethereum","web3","enable","on","alert","location","reload","error","console","log","provider","providers","HttpProvider"],"sources":["/root/dev/Ropsten/unbox/client/src/getWeb3.js"],"sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n          window.ethereum.on('disconnect',function(){\n            alert(\"il faut se connecter\");\n          });\n          window.ethereum.on('accountsChanged',function(){\n            window.location.reload();\n          });     \n          window.ethereum.on('chainChanged',function(){\n            window.location.reload();\n          });\n       \n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,OAAO,GAAG,MACd,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EAC/B;EACAC,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;IAC1C;IACA,IAAID,MAAM,CAACE,QAAX,EAAqB;MACnB,MAAMC,IAAI,GAAG,IAAIR,IAAJ,CAASK,MAAM,CAACE,QAAhB,CAAb;;MACA,IAAI;QACF;QACA,MAAMF,MAAM,CAACE,QAAP,CAAgBE,MAAhB,EAAN,CAFE,CAGF;;QACAN,OAAO,CAACK,IAAD,CAAP;QACAH,MAAM,CAACE,QAAP,CAAgBG,EAAhB,CAAmB,YAAnB,EAAgC,YAAU;UACxCC,KAAK,CAAC,sBAAD,CAAL;QACD,CAFD;QAGAN,MAAM,CAACE,QAAP,CAAgBG,EAAhB,CAAmB,iBAAnB,EAAqC,YAAU;UAC7CL,MAAM,CAACO,QAAP,CAAgBC,MAAhB;QACD,CAFD;QAGAR,MAAM,CAACE,QAAP,CAAgBG,EAAhB,CAAmB,cAAnB,EAAkC,YAAU;UAC1CL,MAAM,CAACO,QAAP,CAAgBC,MAAhB;QACD,CAFD;MAID,CAfD,CAeE,OAAOC,KAAP,EAAc;QACdV,MAAM,CAACU,KAAD,CAAN;MACD;IACF,CApBD,CAqBA;IArBA,KAsBK,IAAIT,MAAM,CAACG,IAAX,EAAiB;MACpB;MACA,MAAMA,IAAI,GAAGH,MAAM,CAACG,IAApB;MACAO,OAAO,CAACC,GAAR,CAAY,yBAAZ;MACAb,OAAO,CAACK,IAAD,CAAP;IACD,CALI,CAML;IANK,KAOA;MACH,MAAMS,QAAQ,GAAG,IAAIjB,IAAI,CAACkB,SAAL,CAAeC,YAAnB,CACf,uBADe,CAAjB;MAGA,MAAMX,IAAI,GAAG,IAAIR,IAAJ,CAASiB,QAAT,CAAb;MACAF,OAAO,CAACC,GAAR,CAAY,8CAAZ;MACAb,OAAO,CAACK,IAAD,CAAP;IACD;EACF,CAvCD;AAwCD,CA1CD,CADF;;AA6CA,eAAeP,OAAf"},"metadata":{},"sourceType":"module"}